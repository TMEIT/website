apiVersion: apps/v1
kind: Deployment
metadata:
  name: tmeit-app
  labels:
    app: tmeit-app
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
  selector:
    matchLabels:
      app: tmeit-app
  template:
    metadata:
      labels:
        app: tmeit-app
    spec:
      containers:
      - name: uvicorn
        image: tmeit-app:0.0.1
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: kubegres-passwords
                key: tmeitBackendUserPassword
          - name: JWT_KEY
            valueFrom:
              secretKeyRef:
                name: jwt-secret
                key: jwtSecret
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 2
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 2
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        resources:
          requests:
            cpu: "250m"
            memory: "100Mi"
            ephemeral-storage: 1Gi # I think this is used for logs? kube-score says that it's important to limit this.
          limits:
            cpu: "900m"
            memory: "300Mi"
            ephemeral-storage: 2Gi
        securityContext:
          readOnlyRootFilesystem: true
      affinity:  # Tries to place replicas on separate nodes
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - tmeit-app
                topologyKey: kubernetes.io/hostname
      securityContext:
        runAsUser: 20000
        runAsGroup: 20000
