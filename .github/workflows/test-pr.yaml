name: Run pr tests

on:
  pull_request:
    branches:
      - master

env:
  TMEIT_JLH_NAME_CA_BASE64: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJkekNDQVIyZ0F3SUJBZ0lCQURBS0JnZ3Foa2pPUFFRREFqQWpNU0V3SHdZRFZRUUREQmhyTTNNdGMyVnkKZG1WeUxXTmhRREUyTXpneU1UUTNNakV3SGhjTk1qRXhNVEk1TVRrek9EUXhXaGNOTXpFeE1USTNNVGt6T0RReApXakFqTVNFd0h3WURWUVFEREJock0zTXRjMlZ5ZG1WeUxXTmhRREUyTXpneU1UUTNNakV3V1RBVEJnY3Foa2pPClBRSUJCZ2dxaGtqT1BRTUJCd05DQUFUMVBkZGhUUHZSSVdTWWw1T2tDZEpESThDMWlzc3VmT1BYZCtCWFgwNTMKU1VzWCtRVjc3eEZDbjFwdUpSK0k3NmpYcWpyaGd3b044T2g0dVFiTkNtcUdvMEl3UURBT0JnTlZIUThCQWY4RQpCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVVBQbUZkUU5paHZiUWZuVUJVRDJWCm9PN1BsbUl3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUlnU1JDd2dQdmRpQ2k4MjNPV2dIdTQ1cVdMUlFhR2prY2sKT21WWjlHU0IzbzBDSVFEMVRaTVRvakJJRGxicm01QmxSbDR0Z2tCM3lsNVQweWRQM01aYUtqQ0xCZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K

jobs:
  version-incremented: # checks that version has been incremented in node, python, and deployment. And that they match.
    name: Are version numbers incremented
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.2.0
        with:
          fetch-depth: 0 # Required due to get git tag list due to the way Git works
      - uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Check versions
        run: python release_utils/check-tag-incremented.py
        shell: sh
  lint-kustomization:
    name: Lint Kustomize/Kubernetes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.2.0
      - uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: 'Build tmeit.jlh.name manifests'
        uses: stefanprodan/kube-tools@v1
        with:
          kustomize: '4.5.4'
          command: |-
            kustomize build deploy/kubernetes/tmeit-jlh-name -o jlh-rendered-with-jobs.yaml
      - name: Remove Job manifests from test # Jobs are immutable and if we do kubectl apply with one without deleting it on the cluster, the api will throw an error
        run: python release_utils/remove-job-manifests.py
        shell: sh
      - name: Setup KUBECONFIG
        uses: vbem/kubeconfig4sa@v1
        with:
          server: ${{ secrets.JLH_CLUSTER_URL}}
          ca-base64: ${{ env.TMEIT_JLH_NAME_CA_BASE64 }}
          token: ${{ secrets.TMEIT_JLH_NAME_SA_TOKEN}}
          namespace: tmeit
      - name: 'lint prod manifests'
        run: |
          curl -LO "https://dl.k8s.io/release/v1.24.0/bin/linux/amd64/kubectl"
          curl -LO "https://dl.k8s.io/v1.24.0/bin/linux/amd64/kubectl.sha256"
          echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
          chmod +x kubectl
          kubectl apply --dry-run=server -f jlh-rendered.yaml
  lint-gh-actions:
    name: Lint GH Actions workflows
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.2.0
      - uses: reviewdog/action-actionlint@v1
  test-containerfile: # Build containers to test that they build properly
    name: Build app containers
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.2.0
      - name: Build containers
        uses: redhat-actions/buildah-build@v2
        with:
          image: tmeit-app
          context: '.'
          containerfiles: |-
            containerfiles/tmeit-app.Containerfile
            containerfiles/tmeit-run-migrations.Containerfile
  test-app: # Run app tests
    name: Test app
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.2.0
      - name: Build test container
        uses: redhat-actions/buildah-build@v2
        with:
          image: tmeit-app-test
          context: '.'
          containerfiles: containerfiles/tmeit-app-test.Containerfile
      - name: run test
        run: podman run tmeit-app-test
  test-migrations:  # Run migrations and insert dummy data. Also make sure there are no migrations needed to be done
      name: Test migrations
      runs-on: ubuntu-latest
      services:
        postgres:  # Run a postgres container alongside test to be tested on (The name of this key is also the hostname)
          image: postgres:15beta1
          env:
            POSTGRES_USER: tmeit_backend
            POSTGRES_PASSWORD: test  # Make sure this matches back/db_migrations/scripts/pr-migration-tests.sh
            POSTGRES_DB: tmeit_backend
          options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      steps:
        - uses: actions/checkout@v2.2.0
        - name: Build tester container
          run: |
            docker build . -f containerfiles/create-test-db.Containerfile -t create-test-db
            docker build . -f containerfiles/test-migrations.Containerfile -t test-migrations
        - name: Test migrations
          run: docker run --network ${{ job.container.network }} test-migrations
